---
- name:  user and group management is done
  include_tasks: group-users.yaml
- name: cache dir exists
  file:
    path: "{{ golang_cache_dir }}"
    state: directory

- name: Register the current Go version
  command: "{{ golang_install_dir }}/go/bin/go version"
  ignore_errors: yes
  register: go_version
  changed_when: false

- name: delete existing go if it's different version
  file:
    path: "{{ golang_install_dir }}/go"
    state: absent
  when: (go_version.stdout is defined) and (go_version.stdout != golang_version_string )

- name: Check that the golang tar exists
  stat:
    path: "{{ golang_cache_dir }}/{{ golang_tarball }}"
  register: golang_tar

- name: Install | Download the Go tarball
  get_url:
    url: "{{ golang_download_location }}"
    dest: "{{ golang_cache_dir }}"
  when: not golang_tar.stat.exists

- name: Extract the Go tarball
  unarchive:
    src: "{{ golang_cache_dir }}/{{ golang_tarball }}"
    dest: "{{ golang_install_dir }}"
    remote_src: yes
    creates: "{{ golang_install_dir }}/go"

- name: Ensure that GOPATH exists
  file:
    path: "{{ golang_gopath }}"
    state: directory
    group: "{{ golang_group }}"
    mode: 0775

- name: Configure | Set GOROOT for all users and add to PATH
  copy:
    src: go-root.sh
    dest: /etc/profile.d

- name: Configure | Set GOPATH for all users and add to PATH
  copy:
    src: go-path.sh
    dest: /etc/profile.d

- include_tasks: go-packages.yaml
  when: golang_packages | length > 0
